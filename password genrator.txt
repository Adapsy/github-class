import random
import string

def generate_password(length=12, include_uppercase=True, include_numbers=True, include_special_chars=True):
    """
    Generates a random password with the given specifications.
    
    :param length: Length of the password
    :param include_uppercase: Whether to include uppercase letters
    :param include_numbers: Whether to include numbers
    :param include_special_chars: Whether to include special characters
    :return: Generated password
    """
    lower = string.ascii_lowercase
    upper = string.ascii_uppercase if include_uppercase else ''
    numbers = string.digits if include_numbers else ''
    special = string.punctuation if include_special_chars else ''
    
    all_chars = lower + upper + numbers + special
    
    if len(all_chars) == 0:
        raise ValueError("At least one character type must be selected")
    
    password = ''.join(random.choice(all_chars) for _ in range(length))
    return password

# Examples of usage:
# Generate a standard password
print("Standard Password:", generate_password())

# Generate a password without special characters
print("Password without Special Characters:", generate_password(include_special_chars=False))

# Generate a password with only lowercase letters and numbers
print("Lowercase and Numbers Password:", generate_password(include_uppercase=False, include_special_chars=False))

# Generate a high-security password
print("High-Security Password:", generate_password(length=20))

# Generate a short, easy-to-remember password
print("Short Easy-to-Remember Password:", generate_password(length=8, include_uppercase=False, include_special_chars=False))

# Generate a password for IoT devices (longer and includes all character types)
print("IoT Device Password:", generate_password(length=16))
